name: Continuous Delivery

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 3 * * *'
  pull_request:
    types:
      - opened

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ENVIRONMENT_NAME: ${{ secrets.AWS_ENVIRONMENT_NAME }}
      AWS_APPLICATION_NAME: ${{ secrets.AWS_APPLICATION_NAME }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check PR Approval
        id: pr_check
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' && ${{ github.event.action }} == 'opened' ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
            TOKEN=$GITHUB_TOKEN

            APPROVALS=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews?per_page=100" | jq -r '.[] | select(.state == "APPROVED") | .user.login')

            if [[ -z "$APPROVALS" ]]; then
              echo "No approvals yet, exiting..."
              exit 1
            fi
            echo "PR has approvals, proceeding..."
          else
            echo "This workflow is triggered by a different event, exiting..."
            exit 1
          fi

      - uses: actions/checkout@v2

      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install EB CLI using pip
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Initialize EB Environment
        run: eb init -r ${{ env.AWS_DEFAULT_REGION }} -p ${{ env.AWS_ENVIRONMENT_NAME }} ${{ env.AWS_APPLICATION_NAME }}

      - name: Deploy to EB
        run: |
          if eb deploy; then
            echo "Deployment succeeded✅"
          else
            echo "Deployment failed❌"
            exit 1
          fi
